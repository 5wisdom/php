[회원가입]
1. member_form.php(입력 양식 레이아웃)
2. member_form.js(입력이 제대로 작성되었는가를 확인) 
3. member_insert.php(접속된 데이터베이스의 members테이블에 각 입력 값(value)들을 해당하는 필드명에 전송)

[로그인]
1. login_form.php(입력 양식 레이아웃)
2. login.js(입력이 제대로 작성되었는가를 확인)
3. login.php(members라는 테이블로부터 동일한 아이디 입력값이 있는 것을 확인하고 패스워드가 일치하는지를 체크 + 세션생성)

[회원정보수정 - 로그인이 된 상태에서 세션정보를 받아온다.]
1. member_modify_form.php(입력 양식 레이아웃) 
2. member_form.js(입력이 제대로 작성되었는가를 확인) 
3. member_modify.php(members라는 테이블에서 변경된 사항을 update 진행)

[로그아웃 - 로그인이 된 상태에서 세션정보를 받아온다. unset]
1. logout.php(세션을 초기화시킴 - 세션정보를 없앤다.)

[메시지 발송 및 확인, 답글, 삭제]
<메시지 발송 파트>
1. message_form.php(입력 양식 레이아웃) 
2. message.js(입력이 제대로 작성되었는가를 확인)
3. message_insert.php(접속된 데이터 베이스의 message 테이블에 각 입력 값(value)들을 해당하는 필드명에 전송)
4. message_box.php(목록 레이아웃)
5. message_view.php(상세 페이지 -작성된 num을 기준으로 url 정보값을 받아서 활용 -> message라는 테이블로 접근하여 내용 테이터들을 가져올 수 있는 매개체를 활용)
6. message_delete.php(작성된 num을 기준으로 url 정보값을 받아서 활용 -> 해당하는 message의 데이터를 삭제(delete))

<메시지 수신 파트>
1. message_box.php(목록 레이아웃)
2. message_view.php(상세 페이지)
3. message_response_form.php(답장 레이아웃 + num 필드명을 기준으로 message 테이블로부터 해당하는 항목들을 모두 받아옴 + 보낸 사람의 아이디 값(members 테이블)을 타겟으로 답글을 발송)


[게시판]
1.board_form.php(게시글 작성 입력 양식 레이아웃)
2.board.js(입력이 제대로 작성되었는가를 확인)
3.board_insert.php(board 테이블에 각 해당하는 필드명에 값을 전달)
4.board_list.php(board 테이블로부터 각 필요한 데이터 정보들을 가져옴) 
5.board_view.php(url 정보값(num)을 근거로 board 테이블에서 해당하는 상세 내용만 가져옴)
6.board_download.php(첨부파일 다운로드)


<수정파트>
board_modify_form.php(수정 입력 양식 레이아웃)
board.js(입력이 제대로 작성되었는가를 확인)
board_modify.php(board 테이블 업데이트를 진행)

board_delete.php(board 테이블에서 해당하는 삭제 + 기존에 들어가있던 첨부파일도 삭제)



